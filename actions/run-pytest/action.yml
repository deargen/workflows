name: Run pytest
description: Just run pytest and output to Summary. Make sure pytest, the package and its dependencies are installed.
author: Kiyoon Kim

inputs:
  additional-args:
    description: 'Additional arguments to pass to pytest'
    required: false
    default: ''

runs:
  using: 'composite'
  steps:
    - shell: bash -el {0} # setup-miniconda needs this
      name: Run pytest
      run: |
        set +e  # Do not exit shell on pytest failure

        # if using venv, activate it. It won't error out if it doesn't exist.
        if [ -d .venv ]; then
          source .venv/bin/activate  
        fi

        # parse additional_args as an array
        # https://stackoverflow.com/a/31485948/7445323
        additional_args=( )
        while IFS= read -r -d ''; do
          additional_args+=( "$REPLY" )
        done < <(xargs printf '%s\0' <<< "${{ inputs.additional-args }}")

        # print the command multi-line for readability
        echo 'Running command:'
        echo
        printf "pytest "
        for arg in "${additional_args[@]}"; do
          printf '\\\n    %s ' "$arg"
        done
        printf '\n'

        # Send both stdout and stderr to files, and also to the console
        # https://stackoverflow.com/a/53051506/7445323
        pytest "${additional_args[@]}" 1> >(tee stdout.txt) 2> >(tee stderr.txt >&2)
        exit_code=$?
        out=$(<stdout.txt)
        err=$(<stderr.txt)

        # Display the Markdown output in the job summary
        { echo "\`\`\`python"; echo "${out}"; echo "${err}"; echo "\`\`\`"; } >> "$GITHUB_STEP_SUMMARY"
        if [[ $exit_code -eq 5 ]]
        then
          echo
          echo 'WARNING: No tests were run and it is considered as success' >> "$GITHUB_STEP_SUMMARY"
          echo "\`\`\`" >> "$GITHUB_STEP_SUMMARY"
          exit 0
        else
          echo "\`\`\`" >> "$GITHUB_STEP_SUMMARY"
          # Exit with the exit-code returned by pytest
          exit ${exit_code}
        fi
